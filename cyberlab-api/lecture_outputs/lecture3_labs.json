[
    {
        "title": "The Security Implications of Virtualization & Containers",
        "related_slides": [
            "Overview"
        ],
        "discussion": "Discuss how virtualization and containers can improve security through isolation, but also introduce risks such as container escapes, insecure configurations, and privilege escalation.",
        "lab_opportunity": "Have students set up a Java development environment inside a Docker container, explore container security best practices, and analyze potential security misconfigurations.",
        "cve_match": [
            {
                "page_content": "Description: A problem with the network isolation mechanism of the Palo Alto Networks Cortex XDR Broker VM allows attackers unauthorized access to Docker containers from the host network used by Broker VM. This may allow access to read files sent for analysis and logs transmitted by the Cortex XDR Agent to the Cortex XDR server.\nReferences: https://security.paloaltonetworks.com/CVE-2024-0113",
                "metadata": {
                    "cve_id": "CVE-2025-0113",
                    "source_file": "/app/cves/2025/0xxx/CVE-2025-0113.json"
                }
            }
        ]
    },
    {
        "title": "OS-Level Security & Least Privilege",
        "related_slides": [
            "Tech Tuesday: Operating Systems",
            "Operating Systems"
        ],
        "discussion": "Introduce the concept of least privilege in operating systems and how improper permission settings can lead to unauthorized access.",
        "lab_opportunity": "Have students examine file and process permissions in Linux, modifying user privileges and using tools like `chmod` and `sudo` to understand access control.",
        "cve_match": [
            {
                "page_content": "Description: The kernel driver, accessible to low-privileged users, exposes a function that fails to properly validate the privileges of the calling process. This allows creating files at arbitrary locations with full user control, ultimately allowing for privilege escalation to SYSTEM.\nReferences: https://www.elby.ch/de/products/vcd.html",
                "metadata": {
                    "source_file": "/app/cves/2025/1xxx/CVE-2025-1865.json",
                    "cve_id": "CVE-2025-1865"
                }
            }
        ]
    },
    {
        "title": "Linux Security & Secure Configurations",
        "related_slides": [
            "Unix",
            "Linux"
        ],
        "discussion": "Discuss how Linux's open-source nature impacts security, including benefits (community-driven patches) and risks (misconfigurations, root access).",
        "lab_opportunity": "Have students audit Linux security configurations, checking system logs, setting up firewalls (`ufw` or `iptables`), and modifying SSH settings for secure access.",
        "cve_match": [
            {
                "page_content": "Description: in OpenHarmony v4.1.2 and prior versions allow a local attacker cause the common permission is upgraded to root and sensitive information leak through use after free.\nReferences: https://gitee.com/openharmony/security/blob/master/zh/security-disclosure/2025/2025-02.md",
                "metadata": {
                    "cve_id": "CVE-2025-0304",
                    "source_file": "/app/cves/2025/0xxx/CVE-2025-0304.json"
                }
            }
        ]
    },
    {
        "title": "Command Line Security & Secure Scripting",
        "related_slides": [
            "Why Learn Linux and the Command Line",
            "Shell",
            "Scripts"
        ],
        "discussion": "Introduce the risks of running unverified scripts, command injection vulnerabilities, and the importance of verifying script sources.",
        "lab_opportunity": "Have students analyze a shell script containing security flaws (e.g., unchecked user input leading to command injection) and fix it using secure scripting practices.",
        "cve_match": [
            {
                "page_content": "Description: A stored cross-site scripting (XSS) vulnerability exists in the Latex Proof-Reading Module of binary-husky/gpt_academic version 3.9.0. This vulnerability allows an attacker to inject malicious scripts into the `debug_log.html` file generated by the module. When an admin visits this debug report, the injected scripts can execute, potentially leading to unauthorized actions and data access.\nReferences: https://huntr.com/bounties/53bced90-64a9-4ca2-8f2f-282c4ce84d1f",
                "metadata": {
                    "cve_id": "CVE-2025-0183",
                    "source_file": "/app/cves/2025/0xxx/CVE-2025-0183.json"
                }
            }
        ]
    },
    {
        "title": "File System Security & Permission Management",
        "related_slides": [
            "Root Tree Structure",
            "Directory Commands"
        ],
        "discussion": "Explain how improper file permissions can lead to privilege escalation, unauthorized access, and data exposure.",
        "lab_opportunity": "Have students modify file and directory permissions, use `ls -l` to analyze permissions, and demonstrate how weak permissions can expose sensitive data.",
        "cve_match": [
            {
                "page_content": "Description: Improper permission settings for mobile applications (com.transsion.carlcare) may lead to \n\ninformation leakage risk.\nReferences: https://security.tecno.com/SRC/blogdetail/381?lang=en_US, https://security.tecno.com/SRC/securityUpdates",
                "metadata": {
                    "source_file": "/app/cves/2025/0xxx/CVE-2025-0590.json",
                    "cve_id": "CVE-2025-0590"
                }
            }
        ]
    },
    {
        "title": "The Risks of Improper Command Execution & Shell Escapes",
        "related_slides": [
            "Shell Commands",
            "Command-Line Arguments"
        ],
        "discussion": "Discuss how misusing shell commands and improper handling of command-line arguments can lead to security vulnerabilities such as shell injection.",
        "lab_opportunity": "Have students write a Java program that accepts shell commands as input, demonstrate how input validation can prevent command injection, and secure the execution process.",
        "cve_match": [
            {
                "page_content": "Description: A command injection flaw was found in the text editor Emacs. It could allow a remote, unauthenticated attacker to execute arbitrary shell commands on a vulnerable system. Exploitation is possible by tricking users into visiting a specially crafted website or an HTTP URL with a redirect.\nReferences: https://access.redhat.com/errata/RHSA-2025:1915, https://access.redhat.com/errata/RHSA-2025:1917, https://access.redhat.com/errata/RHSA-2025:1961, https://access.redhat.com/errata/RHSA-2025:1962, https://access.redhat.com/errata/RHSA-2025:1963, https://access.redhat.com/errata/RHSA-2025:1964, https://access.redhat.com/errata/RHSA-2025:2022, https://access.redhat.com/errata/RHSA-2025:2130, https://access.redhat.com/errata/RHSA-2025:2157, https://access.redhat.com/errata/RHSA-2025:2195, https://access.redhat.com/errata/RHSA-2025:2754, https://access.redhat.com/security/cve/CVE-2025-1244, https://bugzilla.redhat.com/show_bug.cgi?id=2345150",
                "metadata": {
                    "source_file": "/app/cves/2025/1xxx/CVE-2025-1244.json",
                    "cve_id": "CVE-2025-1244"
                }
            }
        ]
    },
    {
        "title": "Secure File Handling in Java",
        "related_slides": [
            "File Commands"
        ],
        "discussion": "Discuss the risks of insecure file operations, including race conditions, path traversal vulnerabilities, and improper access controls.",
        "lab_opportunity": "Provide students with an insecure Java file-handling program and have them fix vulnerabilities by implementing proper file validation and access controls.",
        "cve_match": [
            {
                "page_content": "Description: A path\ntraversal vulnerability exists in the Rockwell Automation DataEdge Platform DataMosaix Private Cloud. By specifying the character\nsequence in the body of the vulnerable endpoint, it is possible to overwrite\nfiles outside of the intended directory. A threat actor with admin privileges could\nleverage this vulnerability to overwrite reports including user projects.\nReferences: https://www.rockwellautomation.com/en-us/trust-center/security-advisories/advisory.SD1715.html",
                "metadata": {
                    "source_file": "/app/cves/2025/0xxx/CVE-2025-0659.json",
                    "cve_id": "CVE-2025-0659"
                }
            }
        ]
    },
    {
        "title": "Man-in-the-Middle Attacks & Java Networking",
        "related_slides": [
            "Where Do I Find The Java Installation?"
        ],
        "discussion": "Explain how attackers can intercept network communication in Java applications if SSL/TLS is not correctly implemented.",
        "lab_opportunity": "Have students create a Java client-server application, then modify it to implement secure TLS connections and validate certificates properly.",
        "cve_match": [
            {
                "page_content": "Description: Due to a missing authorization check on service endpoints in the SAP NetWeaver Application Server Java, an attacker with standard user role can create JCo connection entries, which are used for remote function calls from or to the application server. This could lead to low impact on confidentiality, integrity, and availability of the application.\nReferences: https://me.sap.com/notes/3540108, https://url.sap/sapsecuritypatchday",
                "metadata": {
                    "source_file": "/app/cves/2025/0xxx/CVE-2025-0067.json",
                    "cve_id": "CVE-2025-0067"
                }
            }
        ]
    },
    {
        "title": "The Importance of Secure Software Compilation",
        "related_slides": [
            "What is Java?"
        ],
        "discussion": "Discuss how improperly secured compilation processes can lead to supply chain attacks, such as injecting malicious dependencies.",
        "lab_opportunity": "Have students verify Java build processes, scan dependencies using security tools like `OWASP Dependency-Check`, and demonstrate how outdated libraries pose security risks.",
        "cve_match": [
            {
                "page_content": "Description: The Export and Import Users and Customers plugin for WordPress is vulnerable to PHP Object Injection in all versions up to, and including, 2.6.2 via deserialization of untrusted input from the 'form_data' parameter. This makes it possible for authenticated attackers, with Administrator-level access and above, to inject a PHP Object. No known POP chain is present in the vulnerable software, which means this vulnerability has no impact unless another plugin or theme containing a POP chain is installed on the site. If a POP chain is present via an additional plugin or theme installed on the target system, it may allow the attacker to perform actions like delete arbitrary files, retrieve sensitive data, or execute code depending on the POP chain present.",
                "metadata": {
                    "cve_id": "CVE-2025-1971",
                    "source_file": "/app/cves/2025/1xxx/CVE-2025-1971.json"
                }
            }
        ]
    },
    {
        "title": "Logging & Secure Debugging Practices",
        "related_slides": [
            "Scripts"
        ],
        "discussion": "Explain how improper logging can lead to security issues, including leaking sensitive information and log injection attacks.",
        "lab_opportunity": "Provide students with a Java logging implementation that improperly logs sensitive data and have them refactor it to use secure logging best practices.",
        "cve_match": [
            {
                "page_content": "Description: The WP Activity Log plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the ‘message’ parameter in all versions up to, and including, 5.2.2 due to insufficient input sanitization and output escaping. This makes it possible for unauthenticated attackers to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.\nReferences: https://www.wordfence.com/threat-intel/vulnerabilities/id/91699d32-1768-4d87-a4f2-91969b3e3355?source=cve, https://wordpress.org/plugins/wp-security-audit-log/#developers, https://plugins.trac.wordpress.org/browser/wp-security-audit-log/trunk/classes/Controllers/class-alert-manager.php, https://plugins.trac.wordpress.org/browser/wp-security-audit-log/trunk/classes/Controllers/class-alert.php, https://plugins.trac.wordpress.org/changeset/3238760/",
                "metadata": {
                    "source_file": "/app/cves/2025/0xxx/CVE-2025-0924.json",
                    "cve_id": "CVE-2025-0924"
                }
            }
        ]
    }
]