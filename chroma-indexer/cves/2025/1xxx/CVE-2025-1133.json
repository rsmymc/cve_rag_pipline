{
    "dataType": "CVE_RECORD",
    "dataVersion": "5.1",
    "cveMetadata": {
        "cveId": "CVE-2025-1133",
        "assignerOrgId": "b7efe717-a805-47cf-8e9a-921fca0ce0ce",
        "state": "PUBLISHED",
        "assignerShortName": "Gridware",
        "dateReserved": "2025-02-08T04:11:55.409Z",
        "datePublished": "2025-02-19T08:52:43.000Z",
        "dateUpdated": "2025-02-19T15:03:53.926Z"
    },
    "containers": {
        "cna": {
            "affected": [
                {
                    "defaultStatus": "unaffected",
                    "product": "ChurchCRM",
                    "vendor": "ChurchCRM",
                    "versions": [
                        {
                            "status": "affected",
                            "version": "ChurchCRM 5.13.0 and prior"
                        }
                    ]
                }
            ],
            "credits": [
                {
                    "lang": "en",
                    "type": "finder",
                    "value": "Michael McInerney"
                }
            ],
            "descriptions": [
                {
                    "lang": "en",
                    "supportingMedia": [
                        {
                            "base64": false,
                            "type": "text/html",
                            "value": "<span style=\"background-color: rgb(255, 255, 255);\">A vulnerability exists in </span><strong>ChurchCRM 5.13.0 and prior</strong><span style=\"background-color: rgb(255, 255, 255);\">&nbsp;that allows an attacker to execute arbitrary SQL queries by exploiting a </span><strong>boolean-based blind SQL Injection</strong><span style=\"background-color: rgb(255, 255, 255);\">&nbsp;vulnerability in the </span><code>EditEventAttendees</code><span style=\"background-color: rgb(255, 255, 255);\">&nbsp;functionality. The </span><code>EID</code><span style=\"background-color: rgb(255, 255, 255);\">&nbsp;parameter is directly concatenated into an SQL query without proper sanitization, making it susceptible to SQL injection attacks. An attacker can manipulate the query, potentially leading to </span><strong>data exfiltration, modification, or deletion</strong><span style=\"background-color: rgb(255, 255, 255);\">.&nbsp; Please note that this vulnerability requires Administrator privileges.</span><br>"
                        }
                    ],
                    "value": "A vulnerability exists in ChurchCRM 5.13.0 and prior that allows an attacker to execute arbitrary SQL queries by exploiting a boolean-based blind SQL Injection vulnerability in the EditEventAttendees functionality. The EID parameter is directly concatenated into an SQL query without proper sanitization, making it susceptible to SQL injection attacks. An attacker can manipulate the query, potentially leading to data exfiltration, modification, or deletion.  Please note that this vulnerability requires Administrator privileges."
                }
            ],
            "impacts": [
                {
                    "capecId": "CAPEC-66",
                    "descriptions": [
                        {
                            "lang": "en",
                            "value": "CAPEC-66 SQL Injection"
                        }
                    ]
                }
            ],
            "metrics": [
                {
                    "cvssV4_0": {
                        "Automatable": "YES",
                        "Recovery": "USER",
                        "Safety": "NOT_DEFINED",
                        "attackComplexity": "LOW",
                        "attackRequirements": "NONE",
                        "attackVector": "NETWORK",
                        "baseScore": 9.3,
                        "baseSeverity": "CRITICAL",
                        "privilegesRequired": "HIGH",
                        "providerUrgency": "RED",
                        "subAvailabilityImpact": "HIGH",
                        "subConfidentialityImpact": "HIGH",
                        "subIntegrityImpact": "LOW",
                        "userInteraction": "NONE",
                        "valueDensity": "CONCENTRATED",
                        "vectorString": "CVSS:4.0/AV:N/AC:L/AT:N/PR:H/UI:N/VC:H/VI:H/VA:H/SC:H/SI:L/SA:H/AU:Y/R:U/V:C/RE:H/U:Red",
                        "version": "4.0",
                        "vulnAvailabilityImpact": "HIGH",
                        "vulnConfidentialityImpact": "HIGH",
                        "vulnIntegrityImpact": "HIGH",
                        "vulnerabilityResponseEffort": "HIGH"
                    },
                    "format": "CVSS",
                    "scenarios": [
                        {
                            "lang": "en",
                            "value": "GENERAL"
                        }
                    ]
                }
            ],
            "problemTypes": [
                {
                    "descriptions": [
                        {
                            "cweId": "CWE-89",
                            "description": "CWE-89 Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
                            "lang": "en",
                            "type": "CWE"
                        }
                    ]
                }
            ],
            "providerMetadata": {
                "orgId": "b7efe717-a805-47cf-8e9a-921fca0ce0ce",
                "shortName": "Gridware",
                "dateUpdated": "2025-02-19T08:52:43.000Z"
            },
            "references": [
                {
                    "url": "https://github.com/ChurchCRM/CRM/issues/7252"
                }
            ],
            "solutions": [
                {
                    "lang": "en",
                    "supportingMedia": [
                        {
                            "base64": false,
                            "type": "text/html",
                            "value": "<p>To prevent SQL injection, use prepared statements with parameterised queries. Additionally, implement input validation to reject dangerous characters, apply the principle of least privilege to database users to minimise potential damage, and assign appropriate data types in PHP, such as converting EID to an integer if it represents a numeric value.</p>"
                        }
                    ],
                    "value": "To prevent SQL injection, use prepared statements with parameterised queries. Additionally, implement input validation to reject dangerous characters, apply the principle of least privilege to database users to minimise potential damage, and assign appropriate data types in PHP, such as converting EID to an integer if it represents a numeric value."
                }
            ],
            "source": {
                "discovery": "UNKNOWN"
            },
            "title": "SQL Injection in ChurchCRM EID Parameter via EditEventAttendees.php",
            "x_generator": {
                "engine": "Vulnogram 0.2.0"
            }
        },
        "adp": [
            {
                "metrics": [
                    {
                        "other": {
                            "type": "ssvc",
                            "content": {
                                "timestamp": "2025-02-19T15:03:44.572015Z",
                                "id": "CVE-2025-1133",
                                "options": [
                                    {
                                        "Exploitation": "poc"
                                    },
                                    {
                                        "Automatable": "yes"
                                    },
                                    {
                                        "Technical Impact": "total"
                                    }
                                ],
                                "role": "CISA Coordinator",
                                "version": "2.0.3"
                            }
                        }
                    }
                ],
                "title": "CISA ADP Vulnrichment",
                "providerMetadata": {
                    "orgId": "134c704f-9b21-4f2e-91b3-4a467353bcc0",
                    "shortName": "CISA-ADP",
                    "dateUpdated": "2025-02-19T15:03:53.926Z"
                }
            }
        ]
    }
}